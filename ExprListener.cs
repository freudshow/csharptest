//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Expr.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ExprParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IExprListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] ExprParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] ExprParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] ExprParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] ExprParser.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] ExprParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] ExprParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpr([NotNull] ExprParser.OrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpr([NotNull] ExprParser.OrExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpr([NotNull] ExprParser.AndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpr([NotNull] ExprParser.AndExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitOrExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitOrExpr([NotNull] ExprParser.BitOrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitOrExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitOrExpr([NotNull] ExprParser.BitOrExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitXorExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitXorExpr([NotNull] ExprParser.BitXorExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitXorExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitXorExpr([NotNull] ExprParser.BitXorExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitAndExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitAndExpr([NotNull] ExprParser.BitAndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitAndExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitAndExpr([NotNull] ExprParser.BitAndExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.equalityExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpr([NotNull] ExprParser.EqualityExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.equalityExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpr([NotNull] ExprParser.EqualityExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.relationalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpr([NotNull] ExprParser.RelationalExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.relationalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpr([NotNull] ExprParser.RelationalExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.shiftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpr([NotNull] ExprParser.ShiftExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.shiftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpr([NotNull] ExprParser.ShiftExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.additiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpr([NotNull] ExprParser.AdditiveExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.additiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpr([NotNull] ExprParser.AdditiveExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.multiplicativeExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpr([NotNull] ExprParser.MultiplicativeExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.multiplicativeExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpr([NotNull] ExprParser.MultiplicativeExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] ExprParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] ExprParser.UnaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpr([NotNull] ExprParser.PrimaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpr([NotNull] ExprParser.PrimaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] ExprParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] ExprParser.FunctionCallContext context);
}
