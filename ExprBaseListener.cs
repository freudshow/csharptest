//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Expr.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IExprListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ExprBaseListener : IExprListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] ExprParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] ExprParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStmt([NotNull] ExprParser.AssignStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStmt([NotNull] ExprParser.AssignStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] ExprParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] ExprParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] ExprParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] ExprParser.OrExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] ExprParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] ExprParser.AndExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitOrExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitOrExpr([NotNull] ExprParser.BitOrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitOrExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitOrExpr([NotNull] ExprParser.BitOrExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitXorExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitXorExpr([NotNull] ExprParser.BitXorExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitXorExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitXorExpr([NotNull] ExprParser.BitXorExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitAndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitAndExpr([NotNull] ExprParser.BitAndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitAndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitAndExpr([NotNull] ExprParser.BitAndExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.equalityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpr([NotNull] ExprParser.EqualityExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.equalityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpr([NotNull] ExprParser.EqualityExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpr([NotNull] ExprParser.RelationalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpr([NotNull] ExprParser.RelationalExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.shiftExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftExpr([NotNull] ExprParser.ShiftExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.shiftExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftExpr([NotNull] ExprParser.ShiftExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.additiveExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpr([NotNull] ExprParser.AdditiveExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.additiveExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpr([NotNull] ExprParser.AdditiveExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.multiplicativeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpr([NotNull] ExprParser.MultiplicativeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.multiplicativeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpr([NotNull] ExprParser.MultiplicativeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] ExprParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] ExprParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpr([NotNull] ExprParser.PrimaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpr([NotNull] ExprParser.PrimaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] ExprParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] ExprParser.FunctionCallContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
