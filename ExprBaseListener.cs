//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Expr.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IExprListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ExprBaseListener : IExprListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] ExprParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] ExprParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] ExprParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] ExprParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStmt([NotNull] ExprParser.AssignStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStmt([NotNull] ExprParser.AssignStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] ExprParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] ExprParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] ExprParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] ExprParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] ExprParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] ExprParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOp([NotNull] ExprParser.UnaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOp([NotNull] ExprParser.UnaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOp([NotNull] ExprParser.MultOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOp([NotNull] ExprParser.MultOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOp([NotNull] ExprParser.AddOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOp([NotNull] ExprParser.AddOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.shiftOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftOp([NotNull] ExprParser.ShiftOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.shiftOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftOp([NotNull] ExprParser.ShiftOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOp([NotNull] ExprParser.CompareOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOp([NotNull] ExprParser.CompareOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.equalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualOp([NotNull] ExprParser.EqualOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.equalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualOp([NotNull] ExprParser.EqualOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitAndOp([NotNull] ExprParser.BitAndOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitAndOp([NotNull] ExprParser.BitAndOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitXorOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitXorOp([NotNull] ExprParser.BitXorOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitXorOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitXorOp([NotNull] ExprParser.BitXorOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.bitOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitOrOp([NotNull] ExprParser.BitOrOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.bitOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitOrOp([NotNull] ExprParser.BitOrOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.logicAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicAndOp([NotNull] ExprParser.LogicAndOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.logicAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicAndOp([NotNull] ExprParser.LogicAndOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.logicOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicOrOp([NotNull] ExprParser.LogicOrOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.logicOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicOrOp([NotNull] ExprParser.LogicOrOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.funcName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncName([NotNull] ExprParser.FuncNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.funcName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncName([NotNull] ExprParser.FuncNameContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
